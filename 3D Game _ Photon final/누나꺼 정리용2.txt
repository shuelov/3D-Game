- 본 파일은 수업의 흐름을 따라가기 위해 만든 파일임을 알려드립니다 -

- 어느정도 정리를 해두긴 했지만, 수업 하면서 정리 한 것이라 설명이 매우 미흡할 수 있습니다.
  또한, 당일 필자가 살짝 상태가 메롱했기 때문에 내용이 완벽하지 않을 수 있음을 미리 알려드립니다.
  이 파일에 적힌 내용에 대한 더 자세한 설명이 필요하시면 말해주세요.^^-


◈◈◈ 방 제작 ◈◈◈

1. 전날 했던 Panel에서 text, inputfield, button을 동시에 ctrl + d로 복사
   각각 Room, Room Name, Make Room으로 텍스트를 바꿔준다.

2. Photon 스크립트에서 방 이름을 받아올 InputField 변수 선언

    // 방 이름을 입력하는 UI 항목 연결을 위한 레퍼런스
    public InputField roomName;

   Awake 함수에 방 이름을 기본적으로 받아오는 것을 연결

    // 룸 이름을 무작위로 설정(UI 버전에서 사용)
    roomName.text = "ROOM" + Random.Range(0, 999).ToString("000");

3. 방 만드는 함수인 OnClickCreateRoom 제작

	string _roomName = roomName.text;

        // 룸 이름이 없거나 Null일 경우 룸 이름 지정
        if(string.IsNullOrEmpty(roomName.text))
        {
            // 자리수 맞춰서 반환
            _roomName = "ROOM" + Random.Range(0, 999).ToString("000");
        }

        // 로컬 플레이어의 이름을 설정
        PhotonNetwork.player.NickName = userId.text;

        // 플레이어의 이름을 로컬 저장
        // PlayerPrefs.SetString("USER_ID", userId.text);

        // 생성할 룸의 조건 설정 1
        RoomOptions roomOptions = new RoomOptions();
        roomOptions.IsOpen = true;
        roomOptions.IsVisible = true;
        roomOptions.MaxPlayers = 50;

        // 생성할 룸의 조건 설정 2 (객체 생성과 동시에 멤버변수 초기화)
        // RoomOptions roomOptions = new RoomOptions() {IsOpen = true, IsVisible = true, MaxPlayers = 50 };

        // 지정한 조건에 맞는 룸 생성 함수
        PhotonNetwork.CreateRoom(_roomName, roomOptions, TypedLobby.Default);

4. OnClickCreateRoom 함수 제작 후 Room에 관련된 InputField를 연결해주고, 방 만들기 버튼도 기능을 다시 연결하기

   = 여기까지 했을 시 방 만들기 누르면 방 만들면서 방으로 들어가진다.


◈◈◈ 캐릭터 정보 표현 제작 ◈◈◈


1. scNet 씬으로 넘어와 MainPlayer 프리팹을 Hierarchy에 두기

2. MainPlayer 아래에 Canvas를 넣고 Canvas Scaler에 Reference Pixels per... 을 5로 변경
   그리고 Canvas의 RenderMode를 World Space로 변경

   + BillBoard 스크립트 연결

3. Canvas 아래에 Panel을 추가하고 Panel의 이미지에 SF Button 을 넣어줌

   Canvas 사이즈는 width 10 Height 4 정도로 해두고 캐릭터 위에 위치시키기

4. Canvas 아래에 Text를 추가하고 적절히 위치를 맞춰주자.(필자는 Width 90 Height 20, Scale 0.1, 0.1, 0.1)

   ※ 그리고 rotation을 y에 180도 주자(그래야지 텍스트가 제대로 보이고 카메라가 계속 온전한 텍스트를 보면서 따라다니게 된다)

5. 다시 Canvas 아래에 Image를 추가해 Unity-Selectiont를 이미지 소스에 추가시키고 크기를 조절해주자
   (필자는 Width 9 Height 1, Scale 1, 1, 1) 로 세팅함 - HP 바의 틀이 될 것이다.

6. 다시 Canvas 아래에 Image를 추가해 hpbar을 이미지 소스에 추가시키고 크기를 조절해주자
   (필자는 Width 8.7 Height 0.7, Scale 1, 1, 1) 로 세팅함 - HP가 될 것이다.

   그리고 Image Type을 Filled로 바꿔주고 Horizontal-Right로 세팅해주기


7. PlayerCtrl 스크립트를 열고 변수 선언부분에 다음을 추가

    // 네트워크 UI 버전에서 사용
    private int initLife = 100;

    // 플레이어 하위의 Canvas 객체를 연결할 레퍼런스 
    public Canvas hudCanvas;

    // Filled 타입의 Image UI 항목을 연결할 레퍼런스
    public Image hpBar;

8. PlayerCtrl 스크립트의 Awake 부분에 다음을 추가

 	// 기존의 hp바 연결이 끊기기 때문에 추가
        lifeBar = GameObject.Find("HPBar").GetComponent<Image>();

        // 네트워크 UI 버전에서 사용
        // 현재의 생명력을 초기 생명값으로 초기값 설정
        life = initLife;

        // HP 색상을 파랑색으로 세팅
        hpBar.color = Color.blue; 
        
	+ 알파값을 넣고 싶을때(최대치가 1이기 때문에 255로 나눠서 사용)
	new Color(1 / 255, 1 / 255, 1 / 255, 1 / 255);

9. OnCollisionEnter 부분을 찾아가 다음을 추가

    // 네트워크 UI 버전에서 사용
    // 현재 생명력 백분율 = 현재 생명력 / 초기 생명력

10. PlayerDie 부분에 다음을 추가

        // 죽었으니 HUD를 비활성화 시키자
        hudCanvas.enabled = false;

11. DisplayUserID 스크립트 제작(내용은 네이트온에 있음)

    제작 후 플레이어에 넣은뒤 Canvas 안의 Text 연결 

12. PlayerCtrl 인스펙터에 HPBar 이미지 연결 

    = 여기까지 했으면, 데미지를 맞으면 HP바가 달아야되고, 이름은 자신이 설정한대로 되야한다.


◈◈◈ 방 리스트 표시 ◈◈◈

1. 방 리스트 업데이트 시켜줄 함수 만들기  

    void OnReceivedRoomListUpdate()
    {
        foreach(RoomInfo _room in PhotonNetwork.GetRoomList())
        {
            Debug.Log(_room.Name);
        }
    }

= 여기까지 하고, 실행파일을 만들어서 리스트가 생성되는지 확인해보자